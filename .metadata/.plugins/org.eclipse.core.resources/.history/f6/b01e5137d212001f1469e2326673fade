package com.data;

import java.io.IOException;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.stereotype.Service;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfTable;
import com.lowagie.text.pdf.PdfWriter;

import jakarta.servlet.ServletOutputStream;
import jakarta.servlet.http.HttpServletResponse;

@Service
public class ServiceClass implements ServiceInterface {

	@Autowired
	private RepositoryInterface repository;
	
	@Autowired
	private ExcelGenretor excelGenretor;

	@Override
	public List<String> getPlaneName() {
		List<String> planName = repository.getByPlanName();
		return planName;
	}

	@Override
	public List<String> getPlanStatus() {
		return repository.getByPlanStatus();
	}

	@SuppressWarnings("unlikely-arg-type")
	@Override
	public List<CustomerDataEntity> getSearchData(SearchReqData searchReqData) {
		System.out.println(searchReqData);
		CustomerDataEntity cEntity = new CustomerDataEntity();
		
		if (null != searchReqData.getPlanName() && !"".equals(searchReqData.getPlanName())) {

			cEntity.setPlanName(searchReqData.getPlanName());
		}
		if (null != searchReqData.getPlanStatus() && !"".equals(searchReqData.getPlanStatus())) {
			cEntity.setPlanStatus(searchReqData.getPlanStatus());
		}
		if (null != searchReqData.getGender() && !"".equals(searchReqData.getGender())) {
			cEntity.setGender(searchReqData.getGender());
		}
		if(null != searchReqData.getPlanStartDate() && !"".equals(searchReqData.getPlanStartDate()))
		{
			cEntity.setPlanStartDate(searchReqData.getPlanStartDate());
		}
		if(null != searchReqData.getPlanEndDate() && !"".equals(searchReqData.getPlanEndDate())) {
			cEntity.setPlanEndDate(searchReqData.getPlanEndDate());
		}
		
		return repository.findAll(Example.of(cEntity));
	}

	@Override
	public boolean getExcel(HttpServletResponse response) throws Exception 
	{
		List<CustomerDataEntity> all = repository.findAll();
		excelGenretor.excelGenretro(all,response);
		return true;
	}

	@Override
	public boolean getpdf(HttpServletResponse response) throws DocumentException, IOException {
		Document document=new Document(PageSize.A4);
		
		PdfWriter.getInstance(document, response.getOutputStream());
		
		document.open();
		
		Paragraph p=new Paragraph("Citizen plan info");
		document.add(p);
		PdfPTable table=new PdfPTable(6);
		table.addCell("Id");
		table.addCell("Citizen-name");
		table.addCell("Plane-name");
		table.addCell("plane-status");
		table.addCell("plan-start-date");
		table.addCell("plane-end-date");
		
		List<CustomerDataEntity> all = repository.findAll();
		
		for(CustomerDataEntity plan : all) {
			table.addCell(String.valueOf(plan.getCitizenId()));
			table.addCell(plan.getCitizenName());
			table.addCell(plan.getPlanName());
			table.addCell(plan.getPlanStatus());
			table.addCell(plan.getPlanStartDate()+"");
			table.addCell(plan.getPlanEndDate()+"");
			
		}
		document.add(table);
		
		
		document.close();
		return true;
	}

}
