package com.data;

import java.io.IOException;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.stereotype.Service;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfWriter;

import jakarta.servlet.ServletOutputStream;
import jakarta.servlet.http.HttpServletResponse;

@Service
public class ServiceClass implements ServiceInterface {

	@Autowired
	private RepositoryInterface repository;

	@Override
	public List<String> getPlaneName() {
		List<String> planName = repository.getByPlanName();
		return planName;
	}

	@Override
	public List<String> getPlanStatus() {
		return repository.getByPlanStatus();
	}

	@SuppressWarnings("unlikely-arg-type")
	@Override
	public List<CustomerDataEntity> getSearchData(SearchReqData searchReqData) {
		System.out.println(searchReqData);
		CustomerDataEntity cEntity = new CustomerDataEntity();
		
		if (null != searchReqData.getPlanName() && !"".equals(searchReqData.getPlanName())) {

			cEntity.setPlanName(searchReqData.getPlanName());
		}
		if (null != searchReqData.getPlanStatus() && !"".equals(searchReqData.getPlanStatus())) {
			cEntity.setPlanStatus(searchReqData.getPlanStatus());
		}
		if (null != searchReqData.getGender() && !"".equals(searchReqData.getGender())) {
			cEntity.setGender(searchReqData.getGender());
		}
		if(null != searchReqData.getPlanStartDate() && !"".equals(searchReqData.getPlanStartDate()))
		{
			cEntity.setPlanStartDate(searchReqData.getPlanStartDate());
		}
		if(null != searchReqData.getPlanEndDate() && !"".equals(searchReqData.getPlanEndDate())) {
			cEntity.setPlanEndDate(searchReqData.getPlanEndDate());
		}
		
		return repository.findAll(Example.of(cEntity));
	}

	@Override
	public boolean getExcel(HttpServletResponse response) throws Exception 
	{
		
		Workbook workbook =new HSSFWorkbook();
		Sheet sheet = workbook.createSheet("plans-data");
		Row row = sheet.createRow(0);
		
		row.createCell(0).setCellValue("ID");
		row.createCell(1).setCellValue("CITIZEN-NAME");
		row.createCell(2).setCellValue("PLAN-NAME");
		row.createCell(3).setCellValue("PLAN-STATUS");
		row.createCell(4).setCellValue("PLAN START DATE");
		row.createCell(5).setCellValue("PLAN END DATE");
		row.createCell(6).setCellValue("BENIFICRY AMOUNT");
		
		List<CustomerDataEntity> all = repository.findAll();
		
		int datarowindex=1;
		for(CustomerDataEntity plans:all)
		{
			Row row2 = sheet.createRow(datarowindex);
			
			row2.createCell(0).setCellValue(plans.getCitizenId());
			row2.createCell(1).setCellValue(plans.getCitizenName());
			row2.createCell(2).setCellValue(plans.getPlanName());
			row2.createCell(3).setCellValue(plans.getPlanStatus());
			
			
			if(null != plans.getPlanStartDate()) {
				row2.createCell(4).setCellValue(plans.getPlanStartDate()+"");	
			}
			else {
				row2.createCell(4).setCellValue("N/A");
			}
			if(null != plans.getPlanEndDate()) {
				row2.createCell(5).setCellValue(plans.getPlanEndDate()+"");
			}
			else {
				row2.createCell(5).setCellValue("N/A");
			}
			if(null != plans.getBenefitAmt()) {
				row2.createCell(6).setCellValue(plans.getBenefitAmt());
			}
			else {
				row2.createCell(6).setCellValue("N/A");
			}
			
			
			datarowindex++;
		}
		ServletOutputStream outputStream = response.getOutputStream();
		workbook.write(outputStream);
		workbook.close();
		return true;
	}

	@Override
	public boolean getpdf(HttpServletResponse response) throws DocumentException, IOException {
		Document document=new Document(PageSize.A4);
		
		PdfWriter.getInstance(document, response.getOutputStream());
		
		document.open();
		
		Paragraph p=new Paragraph("Citizen plan info");
		document.add(p);
		document.close();
		return true;
	}

}
